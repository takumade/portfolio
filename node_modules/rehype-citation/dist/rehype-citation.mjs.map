{"version":3,"file":"rehype-citation.mjs","sources":["../src/regex.js","../src/parse-citation.js","../src/utils.js","../src/generator.js","../src/cite.js","../csl/mla.js","../src/index.js"],"sourcesContent":["/**\n * Captures normal citation in square bracket and in-text citation\n * Citation key start should start with a letter, digit, or _,\n * and contains only alphanumerics and single internal punctuation characters (:.#$%&-+?<>~/),\n *\n * e.g. [-@wadler1990], [@hughes1989, sec 3.4], [see @wadler1990; and @hughes1989, pp. 4]\n * and @wadler1990\n *\n * Group #1 - citation term without [] bracket e.g. -@wadler1990\n * Group #2 - in-text citation term e.g. @wadler1990\n *\n * \\[([^[\\]]*@[^[\\]]+)\\] for group #1\n * (?!\\b)@([a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*) for group #2\n * Use (?!\\b) to avoid email like address e.g. xyx@google.com\n * */\nexport const citeExtractorRe =\n  /\\[([^[\\]]*@[^[\\]]+)\\]|(?!\\b)(@[a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*)/\nexport const citeKeyRe = /@([a-zA-Z0-9_][a-zA-Z0-9_:.#$%&\\-+?<>~]*)/\nexport const citeBracketRe = /\\[.*\\]/\n","/**\n * @typedef CiteItem\n *   Cite item to be passed into citeproc-js\n * @property {string} [id]\n *   The id field is required\n * @property {string} [locator]\n *   A string identifying a page number or other pinpoint location or range within the resource;\n * @property {string} [label]\n *   Path to file\n * @property {string} [prefix]\n *   A string to print before this cite item\n * @property {string} [suffix]\n *   A string to print after this cite item\n * @property {boolean} [suppress-author]\n *   If true, author names will not be included in the citation output for this cite\n * @property {boolean} [author-only]\n *   If true, only the author name will be included in the citation output for this cite\n */\n\nimport { citeBracketRe, citeKeyRe } from './regex.js'\n\nconst locatorMapping = {\n  book: 'book',\n  'bk.': 'book',\n  'bks.': 'book',\n  chapter: 'chapter',\n  'chap.': 'chapter',\n  'chaps.': 'chapter',\n  column: 'column',\n  'col.': 'column',\n  'cols.': 'column',\n  figure: 'figure',\n  'fig.': 'figure',\n  'figs.': 'figure',\n  folio: 'folio',\n  'fol.': 'folio',\n  'fols.': 'folio',\n  number: 'number',\n  'no.': 'number',\n  'nos.': 'number',\n  line: 'line',\n  'l.': 'line',\n  'll.': 'line',\n  note: 'note',\n  'n.': 'note',\n  'nn.': 'note',\n  opus: 'opus',\n  'op.': 'opus',\n  'opp.': 'opus',\n  page: 'page',\n  'p.': 'page',\n  'pp.': 'page',\n  paragraph: 'paragraph',\n  'para.': 'paragraph',\n  'paras.': 'paragraph',\n  part: 'part',\n  'pt.': 'part',\n  'pts.': 'part',\n  section: 'section',\n  'sec.': 'section',\n  'secs.': 'section',\n  'sub verbo': 'sub verbo',\n  's.v.': 'sub verbo',\n  's.vv.': 'sub verbo',\n  verse: 'verse',\n  'v.': 'verse',\n  'vv.': 'verse',\n  volume: 'volume',\n  'vol.': 'volume',\n  'vols.': 'volume',\n  '¶': 'paragraph',\n  '¶¶': 'paragraph',\n  '§': 'section',\n  '§§': 'section',\n}\n\n/**\n * Parses a given citation string and return properties and entries required for cite-proc.\n * Adapted from https://github.com/Zettlr/Citr/blob/master/lib/citr.ts\n *\n * @param {string} citeString Cite string in the form of '[@item]' or '@item'\n * @return {[Object, CiteItem[]]} [properties, entries]\n */\nexport const parseCitation = (citeString) => {\n  /** @type {CiteItem[]} */\n  let entries = []\n  let properties\n  if (citeBracketRe.test(citeString)) {\n    properties = { noteIndex: 0 }\n    // Handle citations in the form of [@item1; @item2]\n    const citeItems = citeString.substr(1, citeString.length - 2).split(';')\n    for (const citeItem of citeItems) {\n      // Prefix is the portion before @ e.g. [see @item1] or an empty string\n      let prefix = ''\n      let locator = ''\n      let label = 'page'\n      let suffix = ''\n      const citeChunk = citeItem.split('@')\n      if (citeChunk.length === 1) {\n        throw new Error('Cite key should be in the form of @key')\n      } else if (citeChunk.length > 2) {\n        throw new Error('More than one cite key @ detected, please separate keys with ;')\n      }\n      prefix += citeChunk[0]\n      prefix = prefix.trim()\n\n      // If [-@item1], suppress author\n      let suppressAuthor = citeItem.indexOf('@') > 0 && citeItem[citeItem.indexOf('@') - 1] === '-'\n      if (suppressAuthor) prefix = prefix.substr(0, prefix.length - 1).trim()\n\n      // The citation key can be terminated with a comma or space\n      let commaIndex = citeChunk[1].indexOf(',') + 1\n      // If the commaIndex is 0, this means there was no comma - check for space\n      if (commaIndex === 0) commaIndex = citeChunk[1].indexOf(' ') + 1\n      // Pass undefined to extract everything\n      if (commaIndex <= 0) commaIndex = undefined\n      const citeKey = citeItem.substr(citeItem.indexOf('@'), commaIndex).match(citeKeyRe)[0]\n\n      // We are left with the locator, suffix and label\n      let afterKey = citeItem.split('@')[1].substr(citeKey.length).trim()\n      if (afterKey[0] === ',') afterKey = afterKey.substr(1).trim()\n      // Locator should be in the form of 11-22, 33\n      // Would not work form roman numerals or alphabetical sections\n      const locatorMatch = afterKey.match(/(\\d|-| |,)+/g)\n      if (locatorMatch !== null) {\n        locator = locatorMatch[0].trim()\n        // String before the locator is taken to be the label\n        // Use heuristic from https://pandoc.org/MANUAL.html#citation-syntax to convert locator label to valid\n        // Label has to be one of the following: https://docs.citationstyles.org/en/stable/specification.html#locators\n        label = afterKey.split(locator)[0].trim()\n        label = locatorMapping[label] || 'page'\n        // String after the locator is taken to be the suffix\n        suffix = afterKey.split(locator)[1].trim()\n      } else {\n        // If no locator is found, entire string is assumed to be the suffix\n        suffix = afterKey.trim()\n      }\n\n      entries.push({\n        // Get the first capture group which returns the citekey without @\n        id: citeItem.match(citeKeyRe)[1],\n        locator,\n        label,\n        prefix,\n        suffix,\n        'suppress-author': suppressAuthor,\n      })\n    }\n  } else {\n    // Single item in the form of @item1\n    // See https://citeproc-js.readthedocs.io/en/latest/running.html#special-citation-forms\n    properties = { noteIndex: 0, mode: 'composite' }\n    entries = [citeString].map((str) => ({\n      id: str.match(citeKeyRe)[1],\n    }))\n  }\n  return [properties, entries]\n}\n","import fetch from 'cross-fetch'\n\nexport const isNode = typeof window === 'undefined'\n\nexport const readFile = async (path) => {\n  if (isValidHttpUrl(path)) {\n    return fetch(path)\n      .then((response) => response.text())\n      .then((data) => data)\n  } else {\n    if (isNode) {\n      return import('fs').then((fs) => fs.readFileSync(path, 'utf8'))\n    } else {\n      throw new Error(`Cannot read non valid URL in node env.`)\n    }\n  }\n}\n\n/**\n * Check if valid URL\n * https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url\n *\n * @param {string} str\n * @return {boolean}\n */\nexport const isValidHttpUrl = (str) => {\n  let url\n\n  try {\n    url = new URL(str)\n  } catch (_) {\n    return false\n  }\n\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n\n/**\n * Get bibliography by merging options and vfile data\n *\n * @param {import('./generator.js').Options} options\n * @param {import('vfile').VFile} file\n */\nexport const getBibliography = async (options, file) => {\n  let bibliography = ''\n  if (options.bibliography) {\n    bibliography = options.bibliography\n    // @ts-ignore\n  } else if (file?.data?.frontmatter?.bibliography) {\n    // @ts-ignore\n    bibliography = file.data.frontmatter.bibliography\n    // If local path, get absolute path\n    if (!isValidHttpUrl(bibliography)) {\n      if (isNode) {\n        bibliography = await import('path').then((path) =>\n          path.join(options.path || file.cwd, bibliography)\n        )\n      } else {\n        throw new Error(`Cannot read non valid bibliography URL in node env.`)\n      }\n    }\n  }\n\n  return bibliography\n}\n","/**\n * @typedef {import('hast').Node} Node\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('unist-util-visit').Visitor<Node>} Visitor\n * @typedef {import('./parse-citation').CiteItem} CiteItem\n * @typedef Options\n *   Configuration.\n * @property {string} [bibliography]\n *   Name of bibtex or CSL-JSON file\n * @property {string} [path]\n *   Optional path to file (node). Will be joined with `options.bibliography` and used in place of cwd of file if provided.\n * @property {'apa'|'vancouver'|'harvard1'|'chicago'|'mla'|string} [csl]\n *   One of 'apa', 'vancouver', 'harvard1', 'chicago', 'mla' or name of the local csl file\n * @property {string} [lang]\n *   Locale to use in formatting citations. Defaults to en.\n * @property {boolean} [suppressBibliography]\n *   By default, biliography is inserted after the entire markdown file.\n *   If the file contains `[^Ref]`, the biliography will be inserted there instead.\n * @property {string[]} [noCite]\n *   Citation IDs (@item1) to include in the bibliography even if they are not cited in the document\n */\n\nimport { visit } from 'unist-util-visit'\nimport parse5 from 'parse5'\nimport fetch from 'cross-fetch'\nimport { fromParse5 } from 'hast-util-from-parse5'\nimport { parseCitation } from './parse-citation.js'\nimport { citeExtractorRe } from './regex.js'\nimport { isNode, isValidHttpUrl, readFile, getBibliography } from './utils.js'\n\nconst defaultCiteFormat = 'apa'\nconst permittedTags = ['div', 'p', 'span', 'li']\n\n/**\n * Generate citation using citeproc\n * This accounts for prev citations and additional properties\n *\n * @param {*} citeproc\n * @param {CiteItem[]} entries\n * @param {string} citationId\n * @param {any[]} citationPre\n * @param {*} [properties={ noteIndex: 0 }]\n * @return {*}\n */\nconst genCitation = (citeproc, entries, citationId, citationPre, properties = { noteIndex: 0 }) => {\n  const c = citeproc.processCitationCluster(\n    {\n      citationID: citationId,\n      citationItems: entries,\n      properties: properties,\n    },\n    citationPre.length > 0 ? citationPre : [],\n    []\n  )\n  // c = [ { bibchange: true, citation_errors: [] }, [ [ 0, '(1)', 'CITATION-1' ] ]]\n  const result = c[1].filter((x) => x[2] === citationId)\n  // Coerce to html to parse HTML code e.g. &#38; and return text node\n  const p5ast = parse5.parseFragment(`<div>${result[0][1]}</div>`)\n  const citeNode = fromParse5(p5ast).children[0]\n  const textNode = citeNode.children[0]\n  return textNode\n}\n\n/**\n * Generate bibliography in html and convert it to hast\n *\n * @param {*} citeproc\n */\nconst genBiblioNode = (citeproc) => {\n  const [, bibBody] = citeproc.makeBibliography()\n  const bibliography =\n    '<div id=\"refs\" class=\"references csl-bib-body\">\\n' + bibBody.join('') + '</div>'\n  const p5ast = parse5.parseFragment(bibliography)\n  const biblioNode = fromParse5(p5ast).children[0]\n  return biblioNode\n}\n\n/**\n * Rehype plugin that formats citations in markdown documents and insert bibliography in html format\n *\n *    [-@wadler1990]                              --> (1990)\n *    [@hughes1989, sec 3.4]                      --> (Hughes 1989, sec 3.4)\n *    [see @wadler1990; and @hughes1989, pp. 4]   --> (see Wadler 1990 and Hughes 1989, pp. 4)\n *\n * @param {*} Cite cite object from citation-js configured with the required CSLs\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypeCitationGenerator = (Cite) => {\n  return (options = {}) => {\n    return async (tree, file) => {\n      let bibliography = await getBibliography(options, file)\n      if (!bibliography) {\n        return\n      }\n\n      /** @type {string} */\n      let bibtexFile\n      /** @type {string} */ // @ts-ignore\n      const citeFormat = options.csl || file?.data?.frontmatter?.csl || defaultCiteFormat\n      if (isValidHttpUrl(bibliography)) {\n        isNode\n        const response = await fetch(bibliography)\n        bibtexFile = await response.text()\n      } else {\n        if (isNode) {\n          bibtexFile = await readFile(bibliography)\n        } else {\n          throw new Error(`Cannot read non valid bibliography URL in node env.`)\n        }\n      }\n\n      const citations = new Cite(bibtexFile)\n      const citationIds = citations.data.map((x) => x.id)\n      const citationPre = []\n      let citationId = 1\n      const config = Cite.plugins.config.get('@csl')\n      const citeproc = config.engine(citations.data, citeFormat, options.lang || 'en', 'html')\n\n      visit(tree, 'text', (node, idx, parent) => {\n        const match = node.value.match(citeExtractorRe)\n        //@ts-ignore\n        if (!match || !permittedTags.includes(parent.tagName)) return\n        const citeStartIdx = match.index\n        const citeEndIdx = match.index + match[0].length\n        const newChildren = []\n        // if preceding string\n        if (citeStartIdx !== 0) {\n          // create a new child node\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(0, citeStartIdx),\n          })\n        }\n\n        const [properties, entries] = parseCitation(match[0])\n\n        // If id is not in citation file (e.g. route alias or js package), abort process\n        for (const citeItem of entries) {\n          if (!citationIds.includes(citeItem.id)) return\n        }\n\n        const citedTextNode = genCitation(\n          citeproc,\n          entries,\n          `CITATION-${citationId}`,\n          citationPre,\n          properties\n        )\n\n        // Prepare citationPre and citationId for the next cite instance\n        citationPre.push([`CITATION-${citationId}`, 0])\n        citationId = citationId + 1\n\n        // TODO: return html with link\n        newChildren.push(citedTextNode)\n\n        // if trailing string\n        if (citeEndIdx < node.value.length) {\n          newChildren.push({\n            type: 'text',\n            value: node.value.slice(citeEndIdx),\n          })\n        }\n\n        // insert into the parent\n        parent.children = [\n          ...parent.children.slice(0, idx),\n          ...newChildren,\n          ...parent.children.slice(idx + 1),\n        ]\n      })\n\n      if (options.noCite) {\n        citeproc.updateItems(options.noCite.map((x) => x.replace('@', '')))\n      }\n\n      if (!options.suppressBibliography && citeproc.registry.mylist.length >= 1) {\n        const biblioNode = genBiblioNode(citeproc)\n        let bilioInserted = false\n\n        // Insert it at ^ref, if not found insert it as the last element of the tree\n        visit(tree, 'element', (node, idx, parent) => {\n          if (\n            (node.tagName === 'p' || node.tagName === 'div') &&\n            node.children[0].value === '[^ref]'\n          ) {\n            parent.children[idx] = biblioNode\n            bilioInserted = true\n          }\n        })\n\n        if (!bilioInserted) {\n          tree.children.push(biblioNode)\n        }\n      }\n    }\n  }\n}\n\nexport default rehypeCitationGenerator\n","// Copied as is from https://github.com/larsgw/citation.js/blob/main/index.js\n// commented out doi, ris, wikidata as they are not used in the rehype plugin\n\nimport * as core from '@citation-js/core/lib/index.js'\nimport { parsers as coreParsers } from '@citation-js/core/lib/plugin-common/input/index.js'\nimport coreOutput from '@citation-js/core/lib/plugin-common/output/index.js'\n\nimport '@citation-js/plugin-bibjson/lib/index.js'\nimport '@citation-js/plugin-bibtex/lib/index.js'\nimport '@citation-js/plugin-csl/lib/index.js'\nimport { fetchEngine } from '@citation-js/plugin-csl/lib/engines.js'\nimport { parsers as bibjsonParsers } from '@citation-js/plugin-bibjson/lib/index.js'\nimport { formats } from '@citation-js/plugin-bibtex/lib/input/index.js'\nimport * as entries from '@citation-js/plugin-bibtex/lib/input/entries.js'\nimport * as bibtxt from '@citation-js/plugin-bibtex/lib/input/bibtxt.js'\nimport bibtexOutput from '@citation-js/plugin-bibtex/lib/output/index.js'\nimport * as bibtexOutputEntries from '@citation-js/plugin-bibtex/lib/output/entries.js'\nimport { Converters } from '@citation-js/plugin-bibtex/lib/mapping/shared.js'\nimport { format as bibtxtFormat } from '@citation-js/plugin-bibtex/lib/output/bibtxt.js'\n\n// require('@citation-js/plugin-doi')\n// require('@citation-js/plugin-ris')\n// require('@citation-js/plugin-wikidata')\n\nimport citeproc from 'citeproc'\nimport * as name from '@citation-js/name'\nimport * as date from '@citation-js/date'\n\n// import bibtexTypes from '@citation-js/plugin-bibtex/lib/mapping/bibtexTypes.json'\nconst bibtexTypes = {\n  source: {\n    article: 'article-journal',\n    book: 'book',\n    booklet: 'book',\n    conference: 'paper-conference',\n    inbook: 'chapter',\n    incollection: 'chapter',\n    inproceedings: 'paper-conference',\n    mastersthesis: 'thesis',\n    phdthesis: 'thesis',\n    proceedings: 'book',\n    techreport: 'report',\n    unpublished: 'manuscript',\n  },\n  target: {\n    article: 'article',\n    'article-journal': 'article',\n    'article-magazine': 'article',\n    'article-newspaper': 'article',\n    book: 'book',\n    chapter: 'inbook',\n    manuscript: 'unpublished',\n    'paper-conference': 'inproceedings',\n    report: 'techreport',\n    review: 'article',\n    'review-book': 'article',\n  },\n}\n\nfunction clone(obj) {\n  const copy = {}\n  for (const key in obj) {\n    copy[key] = typeof obj[key] === 'object' ? clone(obj[key]) : obj[key]\n  }\n  return copy\n}\n\nconst attr = {\n  getAttributedEntry(string, name, value) {\n    return string.replace(/^\\s*<[a-z]+/i, `$& data-${name}=\"${value}\"`)\n  },\n  getPrefixedEntry(value, id) {\n    return attr.getAttributedEntry(value, 'csl-entry-id', id)\n  },\n  getWrappedEntry(value, source, affixes) {\n    const getAffix = (source, affix) =>\n      typeof affix === 'function' ? affix(source) : affix == null ? affix : ''\n\n    if (affixes.prepend == null && affixes.append == null) {\n      return value\n    }\n\n    const prefix = getAffix(source, affixes.prepend)\n    const suffix = getAffix(source, affixes.append)\n    let start = ''\n    let end = ''\n    const match = value.match(/^([^>]+>)([\\s\\S]+)(<[^<]+)$/i)\n    if (match) {\n      start = match[1]\n      value = match[2]\n      end = match[3]\n    }\n\n    return start + prefix + value + suffix + end\n  },\n}\n\nfunction Cite(data, opts) {\n  if (!(this instanceof Cite)) {\n    return new Cite(data, opts)\n  }\n\n  const self = new core.Cite(data, opts)\n  this._options = self._options\n  this.log = self.log\n  this.data = self.data\n}\n\nCite.prototype = Object.create(core.Cite.prototype)\n\nCite.async = core.Cite.async\nCite.validateOptions = core.Cite.validateOptions\nCite.validateOutputOptions = core.Cite.validateOutputOptions\n\nCite.input = core.plugins.input.chain\nCite.inputAsync = core.plugins.input.chainAsync\n\nCite.util = Object.assign({ attr }, core.util)\nCite.version = {\n  cite: core.version,\n  citeproc: citeproc.PROCESSOR_VERSION,\n}\n\nconst CSL = core.plugins.config.get('@csl')\n\nCite.CSL = {\n  engine: fetchEngine,\n  item(data) {\n    return (id) => data.find((entry) => entry.id === id)\n  },\n  locale(lang) {\n    return CSL.styles.get(CSL.styles.has(lang) ? lang : 'en-US')\n  },\n  style(style) {\n    return CSL.templates.get(CSL.templates.has(style) ? style : 'apa')\n  },\n  register: {\n    addTemplate: CSL.templates.add.bind(CSL.templates),\n    getTemplate: CSL.templates.get.bind(CSL.templates),\n    hasTemplate: CSL.templates.has.bind(CSL.templates),\n    addLocale: CSL.locales.add.bind(CSL.locales),\n    getLocale: CSL.locales.get.bind(CSL.locales),\n    hasLocale: CSL.locales.has.bind(CSL.locales),\n  },\n}\n\nCite.plugins = clone(core.plugins)\ndelete Cite.plugins.input.util.clean\n\nCite.parse = Object.assign(\n  {\n    input: {\n      chain: core.plugins.input.chain,\n      chainAsync: core.plugins.input.chainAsync,\n      chainLink: core.plugins.input.chainLink,\n      chainLinkAsync: core.plugins.input.chainLinkAsync,\n      data: core.plugins.input.data,\n      dataAsync: core.plugins.input.dataAsync,\n      type: core.plugins.input.type,\n      async: {\n        chain: core.plugins.input.chainAsync,\n        chainLink: core.plugins.input.chainLinkAsync,\n        data: core.plugins.input.dataAsync,\n      },\n    },\n    name: name.parse,\n    date: date.parse,\n    csl: core.plugins.input.util.clean,\n\n    bibjson: bibjsonParsers.json.record,\n    bibtex: ((parsers, entries, types) => ({\n      json(entries) {\n        return entries.parse([].concat(entries))\n      },\n      prop(field, value) {\n        const parsed = entries.parse([\n          {\n            type: 'book',\n            properties: { [field]: value },\n          },\n        ])[0]\n        const key = Object.keys(parsed).find(([key]) => key !== 'type')\n        return [key, parsed[key]]\n      },\n      text(file) {\n        return parsers['@biblatex/text'].parse(file)\n      },\n      type(type) {\n        return types[type] || 'book'\n      },\n    }))(formats, entries, bibtexTypes.target),\n    bibtxt: ((bibtxt) => ({\n      text: bibtxt.parse,\n      textEntry: bibtxt.textEntry,\n    }))(bibtxt),\n    // doi: ((doi) => ({\n    //   api: doi.parsers.api.parse,\n    //   id: doi.parsers.id.parse,\n    //   async: {\n    //     api: doi.parsers.api.parseAsync,\n    //   },\n    // }))(require('@citation-js/plugin-doi')),\n    json: coreParsers.json.parse,\n    // wikidata: ((wikidata) => ({\n    //   json: wikidata.parsers.entity.parse,\n    //   list: wikidata.parsers.id.parse,\n    //   prop: wikidata.parsers.prop.parse,\n    //   type: wikidata.parsers.prop.parseType,\n    //   async: {\n    //     json: wikidata.parsers.entity.parseAsync,\n    //     prop(...args) {\n    //       return Promise.resolve(wikidata.parsers.prop.parse.apply(this, args))\n    //     },\n    //   },\n    // }))(require('@citation-js/plugin-wikidata')),\n  },\n  Cite.plugins.input\n)\n\nCite.get = Object.assign(\n  {\n    dict: Cite.plugins.dict,\n\n    name: name.format,\n    date: date.format,\n\n    bibtex: ((formatters, entries, converters, types) => ({\n      json(entry) {\n        return entries.formatBibtex([entry])[0]\n      },\n      label({ id, 'citation-label': label, author, issued, 'year-suffix': suffix, title }) {\n        return converters.LABEL.toSource(id, label, author, issued, suffix, title)\n      },\n      text(entries, asHtml) {\n        return formatters.bibtex(entries, { format: asHtml ? 'html' : 'text' })\n      },\n      type(type) {\n        return types[type] || 'misc'\n      },\n    }))(bibtexOutput, bibtexOutputEntries, Converters, bibtexTypes.target),\n    bibtxt: bibtxtFormat,\n    json: coreOutput.data,\n    label: coreOutput.label,\n  },\n  Cite.plugins.output\n)\n\nexport default Cite\n","export default `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<style xmlns=\"http://purl.org/net/xbiblio/csl\" class=\"in-text\" version=\"1.0\" demote-non-dropping-particle=\"never\" page-range-format=\"minimal-two\">\n  <info>\n    <title>Modern Language Association 9th edition</title>\n    <title-short>MLA</title-short>\n    <id>http://www.zotero.org/styles/modern-language-association</id>\n    <link href=\"http://www.zotero.org/styles/modern-language-association\" rel=\"self\"/>\n    <link href=\"http://style.mla.org\" rel=\"documentation\"/>\n    <author>\n      <name>Sebastian Karcher</name>\n    </author>\n    <category citation-format=\"author\"/>\n    <category field=\"generic-base\"/>\n    <summary>This style adheres to the MLA 9th edition handbook. Follows the structure of references as outlined in the MLA Manual closely</summary>\n    <updated>2021-07-13T20:05:10+00:00</updated>\n    <rights license=\"http://creativecommons.org/licenses/by-sa/3.0/\">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights>\n  </info>\n  <locale xml:lang=\"en\">\n    <date form=\"text\">\n      <date-part name=\"day\" suffix=\" \"/>\n      <date-part name=\"month\" suffix=\" \" form=\"short\"/>\n      <date-part name=\"year\"/>\n    </date>\n    <terms>\n      <term name=\"month-01\" form=\"short\">Jan.</term>\n      <term name=\"month-02\" form=\"short\">Feb.</term>\n      <term name=\"month-03\" form=\"short\">Mar.</term>\n      <term name=\"month-04\" form=\"short\">Apr.</term>\n      <term name=\"month-05\" form=\"short\">May</term>\n      <term name=\"month-06\" form=\"short\">June</term>\n      <term name=\"month-07\" form=\"short\">July</term>\n      <term name=\"month-08\" form=\"short\">Aug.</term>\n      <term name=\"month-09\" form=\"short\">Sept.</term>\n      <term name=\"month-10\" form=\"short\">Oct.</term>\n      <term name=\"month-11\" form=\"short\">Nov.</term>\n      <term name=\"month-12\" form=\"short\">Dec.</term>\n      <term name=\"translator\" form=\"short\">trans.</term>\n    </terms>\n  </locale>\n  <macro name=\"author\">\n    <names variable=\"author\">\n      <name name-as-sort-order=\"first\" and=\"text\" delimiter-precedes-last=\"always\" delimiter-precedes-et-al=\"always\" initialize=\"false\" initialize-with=\". \"/>\n      <label form=\"long\" prefix=\", \"/>\n      <substitute>\n        <names variable=\"editor\"/>\n        <names variable=\"translator\"/>\n        <text macro=\"title\"/>\n      </substitute>\n    </names>\n  </macro>\n  <macro name=\"author-short\">\n    <group delimiter=\", \">\n      <names variable=\"author\">\n        <name form=\"short\" initialize-with=\". \" and=\"text\"/>\n        <substitute>\n          <names variable=\"editor\"/>\n          <names variable=\"translator\"/>\n          <text macro=\"title-short\"/>\n        </substitute>\n      </names>\n      <choose>\n        <if disambiguate=\"true\">\n          <text macro=\"title-short\"/>\n        </if>\n      </choose>\n    </group>\n  </macro>\n  <macro name=\"title\">\n    <choose>\n      <if variable=\"container-title\" match=\"any\">\n        <text variable=\"title\" quotes=\"true\" text-case=\"title\"/>\n      </if>\n      <else>\n        <text variable=\"title\" font-style=\"italic\" text-case=\"title\"/>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"title-short\">\n    <choose>\n      <if variable=\"container-title\" match=\"any\">\n        <text variable=\"title\" form=\"short\" quotes=\"true\" text-case=\"title\"/>\n      </if>\n      <else>\n        <text variable=\"title\" form=\"short\" font-style=\"italic\" text-case=\"title\"/>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"container-title\">\n    <text variable=\"container-title\" font-style=\"italic\" text-case=\"title\"/>\n  </macro>\n  <macro name=\"other-contributors\">\n    <choose>\n      <if variable=\"container-title\" match=\"any\">\n        <group delimiter=\", \">\n          <names variable=\"container-author\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \"/>\n            <name and=\"text\"/>\n          </names>\n          <names variable=\"editor translator\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \"/>\n            <name and=\"text\"/>\n          </names>\n          <names variable=\"director illustrator interviewer\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \"/>\n            <name and=\"text\"/>\n          </names>\n        </group>\n      </if>\n      <else>\n        <group delimiter=\", \">\n          <names variable=\"container-author\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \" text-case=\"capitalize-first\"/>\n            <name and=\"text\"/>\n          </names>\n          <names variable=\"editor translator\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \" text-case=\"capitalize-first\"/>\n            <name and=\"text\"/>\n          </names>\n          <names variable=\"director illustrator interviewer\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \" text-case=\"capitalize-first\"/>\n            <name and=\"text\"/>\n          </names>\n        </group>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"version\">\n    <group delimiter=\", \">\n      <choose>\n        <if is-numeric=\"edition\">\n          <group delimiter=\" \">\n            <number variable=\"edition\" form=\"ordinal\"/>\n            <text term=\"edition\" form=\"short\"/>\n          </group>\n        </if>\n        <else>\n          <text variable=\"edition\" text-case=\"capitalize-first\"/>\n        </else>\n      </choose>\n      <text variable=\"version\"/>\n    </group>\n  </macro>\n  <macro name=\"volume-lowercase\">\n    <group delimiter=\" \">\n      <text term=\"volume\" form=\"short\"/>\n      <text variable=\"volume\"/>\n    </group>\n  </macro>\n  <macro name=\"number\">\n    <group delimiter=\", \">\n      <group>\n        <choose>\n          <!--lowercase if we have a preceding element-->\n          <if variable=\"edition container-title\" match=\"any\">\n            <text macro=\"volume-lowercase\"/>\n          </if>\n          <!--other contributors preceding the volume-->\n          <else-if variable=\"author\" match=\"all\">\n            <choose>\n              <if variable=\"editor translator container-author illustrator interviewer director\" match=\"any\">\n                <text macro=\"volume-lowercase\"/>\n              </if>\n            </choose>\n          </else-if>\n          <else-if variable=\"editor\" match=\"all\">\n            <choose>\n              <if variable=\"translator container-author illustrator interviewer director\" match=\"any\">\n                <text macro=\"volume-lowercase\"/>\n              </if>\n            </choose>\n          </else-if>\n          <else-if variable=\"container-author illustrator interviewer director\" match=\"any\">\n            <text macro=\"volume-lowercase\"/>\n          </else-if>\n          <else>\n            <group delimiter=\" \">\n              <text term=\"volume\" form=\"short\" text-case=\"capitalize-first\"/>\n              <text variable=\"volume\"/>\n            </group>\n          </else>\n        </choose>\n      </group>\n      <group delimiter=\" \">\n        <text term=\"issue\" form=\"short\"/>\n        <text variable=\"issue\"/>\n      </group>\n      <choose>\n        <if type=\"report\">\n          <text variable=\"genre\"/>\n        </if>\n      </choose>\n      <text variable=\"number\"/>\n    </group>\n  </macro>\n  <macro name=\"publisher\">\n    <text variable=\"publisher\"/>\n  </macro>\n  <macro name=\"publication-date\">\n    <choose>\n      <if type=\"book chapter paper-conference motion_picture\" match=\"any\">\n        <date variable=\"issued\" form=\"numeric\" date-parts=\"year\"/>\n      </if>\n      <else-if type=\"article-journal article-magazine\" match=\"any\">\n        <date variable=\"issued\" form=\"text\" date-parts=\"year-month\"/>\n      </else-if>\n      <else-if type=\"speech\" match=\"none\">\n        <date variable=\"issued\" form=\"text\"/>\n      </else-if>\n    </choose>\n  </macro>\n  <macro name=\"location\">\n    <group delimiter=\", \">\n      <group delimiter=\" \">\n        <label variable=\"page\" form=\"short\"/>\n        <text variable=\"page\"/>\n      </group>\n      <choose>\n        <if variable=\"source\" match=\"none\">\n          <text macro=\"URI\"/>\n        </if>\n      </choose>\n    </group>\n  </macro>\n  <macro name=\"container2-title\">\n    <group delimiter=\", \">\n      <choose>\n        <if type=\"speech\">\n          <text variable=\"event\"/>\n          <date variable=\"event-date\" form=\"text\"/>\n          <text variable=\"event-place\"/>\n        </if>\n      </choose>\n      <text variable=\"archive\"/>\n      <text variable=\"archive-place\"/>\n      <text variable=\"archive_location\"/>\n    </group>\n  </macro>\n  <macro name=\"container2-location\">\n    <choose>\n      <if variable=\"source\">\n        <choose>\n          <if variable=\"DOI URL\" match=\"any\">\n            <group delimiter=\", \">\n              <text variable=\"source\" font-style=\"italic\"/>\n              <text macro=\"URI\"/>\n            </group>\n          </if>\n        </choose>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"URI\">\n    <choose>\n      <if variable=\"DOI\">\n        <text variable=\"DOI\" prefix=\"https://doi.org/\"/>\n      </if>\n      <else>\n        <text variable=\"URL\"/>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"accessed\">\n    <!--using accessed where we don't have an issued date; follows recommendation on p. 53 -->\n    <choose>\n      <if variable=\"issued\" match=\"none\">\n        <group delimiter=\" \">\n          <text term=\"accessed\" text-case=\"capitalize-first\"/>\n          <date variable=\"accessed\" form=\"text\"/>\n        </group>\n      </if>\n    </choose>\n  </macro>\n  <citation et-al-min=\"3\" et-al-use-first=\"1\" disambiguate-add-names=\"true\" disambiguate-add-givenname=\"true\">\n    <layout prefix=\"(\" suffix=\")\" delimiter=\"; \">\n      <choose>\n        <if locator=\"page line\" match=\"any\">\n          <group delimiter=\" \">\n            <text macro=\"author-short\"/>\n            <text variable=\"locator\"/>\n          </group>\n        </if>\n        <else>\n          <group delimiter=\", \">\n            <text macro=\"author-short\"/>\n            <group>\n              <label variable=\"locator\" form=\"short\"/>\n              <text variable=\"locator\"/>\n            </group>\n          </group>\n        </else>\n      </choose>\n    </layout>\n  </citation>\n  <bibliography hanging-indent=\"true\" et-al-min=\"3\" et-al-use-first=\"1\" line-spacing=\"2\" entry-spacing=\"0\" subsequent-author-substitute=\"---\">\n    <sort>\n      <key macro=\"author\"/>\n      <key variable=\"title\"/>\n    </sort>\n    <layout suffix=\".\">\n      <group delimiter=\". \">\n        <text macro=\"author\"/>\n        <text macro=\"title\"/>\n        <date variable=\"original-date\" form=\"numeric\" date-parts=\"year\"/>\n        <group delimiter=\", \">\n          <!---This group corresponds to MLA's \"Container 1\"-->\n          <text macro=\"container-title\"/>\n          <text macro=\"other-contributors\"/>\n          <text macro=\"version\"/>\n          <text macro=\"number\"/>\n          <text macro=\"publisher\"/>\n          <text macro=\"publication-date\"/>\n          <text macro=\"location\"/>\n        </group>\n        <group delimiter=\", \">\n          <!---This group corresponds to MLA's \"Container 2\"-->\n          <!--currently just using this one for archival info-->\n          <text macro=\"container2-title\"/>\n          <text macro=\"container2-location\"/>\n        </group>\n        <text macro=\"accessed\"/>\n      </group>\n    </layout>\n  </bibliography>\n</style>`\n","import rehypeCitationGenerator from './generator.js'\n// @ts-ignore\nimport Cite from './cite.js'\nimport mla from '../csl/mla.js'\nimport chicago from '../csl/chicago.js'\n\n// Citation.js comes with apa, harvard1 and vancouver\nconst config = Cite.plugins.config.get('@csl')\nconfig.templates.add('mla', mla)\nconfig.templates.add('chicago', chicago)\n\nconst rehypeCitation = rehypeCitationGenerator(Cite)\n\nexport default rehypeCitation\n"],"names":["citeExtractorRe","citeKeyRe","citeBracketRe","locatorMapping","book","chapter","column","figure","folio","number","line","note","opus","page","paragraph","part","section","verse","volume","isNode","window","isValidHttpUrl","str","url","URL","_","protocol","permittedTags","bibtexTypes","article","manuscript","report","review","attr","getAttributedEntry","string","name","value","replace","getPrefixedEntry","id","getWrappedEntry","source","affixes","getAffix","affix","prepend","append","prefix","suffix","start","end","match","Cite","data","opts","this","self","core","_options","log","prototype","Object","create","async","validateOptions","validateOutputOptions","input","plugins","chain","inputAsync","chainAsync","util","assign","version","cite","citeproc","PROCESSOR_VERSION","CSL","config","get","engine","fetchEngine","item","find","entry","locale","lang","styles","has","style","templates","register","addTemplate","add","bind","getTemplate","hasTemplate","addLocale","locales","getLocale","hasLocale","clone","obj","copy","key","clean","parse","chainLink","chainLinkAsync","dataAsync","type","date","csl","bibjson","bibjsonParsers","json","record","bibtex","parsers","entries","types","concat","prop","field","parsed","properties","keys","text","file","formats","bibtxt","textEntry","coreParsers","dict","format","formatters","converters","formatBibtex","label","LABEL","toSource","author","issued","title","asHtml","bibtexOutput","bibtexOutputEntries","Converters","bibtxtFormat","coreOutput","output","rehypeCitation","options","tree","bibliography","_file$data","frontmatter","_file$data$frontmatte","import","then","path","join","cwd","Error","getBibliography","citations","bibtexFile","citationIds","map","x","citationPre","citationId","citeFormat","visit","node","idx","parent","includes","tagName","citeStartIdx","index","citeEndIdx","length","newChildren","push","slice","citeString","test","noteIndex","substr","split","citeItem","locator","citeChunk","trim","suppressAuthor","indexOf","commaIndex","undefined","citeKey","afterKey","locatorMatch","mode","parseCitation","citedTextNode","result","processCitationCluster","citationID","citationItems","filter","p5ast","parse5","parseFragment","fromParse5","children","genCitation","noCite","updateItems","suppressBibliography","registry","mylist","biblioNode","makeBibliography","genBiblioNode","bilioInserted","fetch","response","fs","readFileSync","readFile","rehypeCitationGenerator"],"mappings":"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"}